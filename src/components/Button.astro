---
import React from "react"
import { type VariantProps, cva } from "class-variance-authority"
import { cn } from "../lib/utils"

interface ButtonProps
	extends React.ButtonHTMLAttributes<HTMLButtonElement>,
		VariantProps<typeof buttonVariants> {
	invert?: boolean
	href?: string
}

const buttonVariants = cva(
	"inline-flex items-center justify-center rounded-md font-medium text-sm max-sm:text-xs transition-colors focus-visible:outline-none  disabled:pointer-events-none duration-200",
	{
		variants: {
			variant: {
				primary:
					"bg-primary text-primary-foreground hover:bg-secondary hover:text-secondary-foreground border border-primary rounded-full",
				secondary:
					" text-secondary-foreground hover:bg-primary hover:text-primary-foreground border border-border",
				outline: "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
				alert:
					"bg-background border border-alert text-content-alert hover:bg-alert hover:text-white",
				disabled: "text-secondary-foreground bg-secondary border border-border opacity-50",

				ghost: "hover:bg-gray-200 hover:text-gray-900",
				link: "text-subtle underline-offset-4 hover:underline",
			},
			size: {
				default: "h-8 px-3 py-1.5",
				sm: "h-6 px-3 py-2",
				lg: "h-10 px-8",
				xl: "h-12 px-8",
				icon: "h-8 w-8",
				block: "h-8 px-3 py-1.5 w-full",
			},
		},

		defaultVariants: {
			variant: "primary",
			size: "default",
		},
	}
)

const { variant = "primary", size = "default", className, href } = Astro.props as ButtonProps
---

{
	href ? (
		<a href={href} class:list={cn(buttonVariants({ variant, size, className }))} {...Astro.props}>
			<slot />
		</a>
	) : (
		<button
			class:list={cn(buttonVariants({ variant, size, className }))}
			type="button"
			{...Astro.props}
		>
			<slot />
		</button>
	)
}
